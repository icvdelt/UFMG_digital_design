library IEEE;
use IEEE.STD_LOGIC_1164.all;
use IEEE.NUMERIC_STD.all;
use IEEE.MATH_REAL.ceil;
use IEEE.MATH_REAL.log2;

entity testbench_reg is
end testbench_reg;

architecture dataflow_tbreg of testbench_reg is
    	
      component reg is
			generic (
				NUMBER_OF_INPUTS : natural := 4;
				NUMBER_OF_BITS_PER_INPUT : natural := 4;
				INDEX_LENGHT : natural := integer(ceil(log2(real(4)))));
			port (
				rst : in std_logic;
				en : in std_logic;
				i_index : in std_logic_vector ((INDEX_LENGHT - 1) downto 0);
				i_data : in std_logic_vector ((NUMBER_OF_BITS * NUMBER_OF_BITS_PER_INPUT - 1) downto 0);
				o_data : out std_logic_vector ((NUMBER_OF_BITS - 1) downto 0));
		end component;
      
		signal i_data, o_data : std_logic_vector (3 downto 0);
		signal clk, rst, ld : std_logic;
        
      begin
			REG0 : reg port map (
				clk => clk,
				rst => rst,
				ld => ld,
				i_data => i_data,
				o_data => o_data);
				
			
			rst <= '1', '0' after 45001 ps, '1' after 505001 ps, '0' after 605001 ps;
			ld <= '0', '1' after 105001 ps, '0' after 185001 ps, '1' after 205001 ps, '0' after 325001 ps, '1' after 405001 ps, '0' after 425001 ps, '1' after 705001 ps, '0' after 965001 ps;
			i_data <= "0000", "0001" after 105001 ps, "0100" after 125001 ps, "0111" after 145001 ps, "1001" after 165001 ps, "1111" after 185001 ps, "0010" after 205001 ps, "0101" after 225001 ps, "1000" after 245001 ps, "1010" after 265001 ps, "0011" after 285001 ps, "0110" after 305001 ps, "1111" after 405001 ps;
         
			pulse : process
				begin
					clk <= '0';
					wait for 5 ns;
					clk <= '1';
					wait for 10 ns;
					clk <= '0';
					wait for 5 ns;
			end process;
			
end dataflow_tbreg;